<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.ThreadDao">

    <select id="getThreadByUserId" resultType="com.example.demo.entity.ThreadEntity">
        SELECT user_id as userId,
        thread_id as threadId,
        thread_content as threadContent,
        time_stamp as timeStamp,
        thread_title as threadTitle,
        thread_like as threadLike
        FROM thread
        <where>
            user_id = #{userId}
        </where>
    </select>

    <select id="getThreadByPage" resultType="com.example.demo.entity.ThreadEntity">
        SELECT user_id as userId,
        thread_id as threadId,
        thread_content as threadContent,
        time_stamp as timeStamp,
        thread_title as threadTitle,
        thread_like as threadLike
        FROM thread
        ORDER BY time_stamp DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="getThreadByThreadId" resultType="com.example.demo.entity.ThreadEntity">
        SELECT user_id as userId,
        thread_id as threadId,
        thread_content as threadContent,
        time_stamp as timeStamp,
        thread_title as threadTitle,
        thread_like as threadLike
        FROM thread
        <where>
            thread_id = #{threadId}
        </where>
    </select>

    <select id="getImageUrlByThreadId" resultType="java.lang.String">
        SELECT image_url as imageUrl  FROM image
        <where>
            thread_id = #{threadId}
        </where>
    </select>

    <select id="getTotalThreads" resultType="Integer">
        SELECT COUNT(*) FROM thread
    </select>

    <select id="getNameAndAvatarByUserId" resultType="com.example.demo.entity.UserEntity">
        SELECT nick_name as nickName,
        user_avatar as userAvatar
        FROM user
        <where>
            user_id = #{userId}
        </where>
    </select>

    <insert id="addThread" parameterType="com.example.demo.entity.ThreadEntity" useGeneratedKeys="true" keyProperty="threadId">
        INSERT INTO thread(user_id, thread_content, thread_title)
        VALUES(#{userId}, #{threadContent}, #{threadTitle})
    </insert>

</mapper>